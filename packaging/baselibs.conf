arch i586 targets armv7l:armv7l 
arch x86_64 targets armv7l:armv7l 


cross-armv7l-binutils-accel-@X86@
  targettype x86 block!
  targettype 32bit block!

  targettype armv7l autoreqprov off
  targettype armv7l provides "cross-arm-binutils-accel"
  targettype armv7l provides "cross-armv7l-binutils-accel-armv7l"
  targettype armv7l requires "cross-arm-gcc-accel"
  targettype armv7l requires "glibc-@X86@-arm"
  targettype armv7l requires "zlib-@X86@-arm"
  targettype armv7l requires "binutils"
  targettype armv7l prefix /emul/ia32-linux
  targettype armv7l extension -arm
  targettype armv7l +/
  targettype armv7l -/usr/share/man
  targettype armv7l -/usr/share/doc
  targettype armv7l requires "tizen-accelerator"

  targettype armv7l post "#set -x"
  targettype armv7l post " export GCCVER=$(LANG=C gcc -dumpversion) "
  targettype armv7l post " for bin in addr2line ar as c++filt elfedit gprof ld ld.bfd ld.gold nm objcopy objdump ranlib readelf size strings strip ; do"
  targettype armv7l post "   binary="/usr/bin/${bin}" "
  targettype armv7l post "   if test -L ${binary} -a -e ${binary}.orig-arm ; then"
  targettype armv7l post "     echo "${binary} not installed or ${binary}.orig-arm already present !" "
  targettype armv7l post "   else "
  targettype armv7l post "     mv ${binary} ${binary}.orig-arm && ln -s <prefix>${binary} ${binary}"
  targettype armv7l post "     ln -s ${binary} /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/${bin}"
  targettype armv7l post "   fi "
  targettype armv7l post " done "
  targettype armv7l post " ln -sf /usr/bin/ld /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/ld"
  targettype armv7l post " ln -sf /usr/bin/ld.bfd /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/ld.bfd"
  targettype armv7l post " ln -sf /usr/bin/ld.gold /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/ld.gold"

  targettype armv7l preun " set -x"
  targettype armv7l preun " export GCCVER=$(LANG=C gcc -dumpversion) "
  targettype armv7l preun " for bin in addr2line ar as c++filt elfedit gprof ld ld.bfd ld.gold nm objcopy objdump ranlib readelf size strings strip ; do"
  targettype armv7l preun "   binary="/usr/bin/${bin}" "
  targettype armv7l preun "   if test -e ${binary}.orig-arm ; then"
  targettype armv7l preun "     rm ${binary} && mv ${binary}.orig-arm ${binary}"
  targettype armv7l preun "     rm /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/${bin}"
  targettype armv7l preun "   else "
  targettype armv7l preun "     echo "${binary}.orig-arm not present !" "
  targettype armv7l preun "   fi "
  targettype armv7l preun " done "
  targettype armv7l preun " rm -f /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/ld"
  targettype armv7l preun " rm -f /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/ld.bfd"
  targettype armv7l preun " rm -f /usr/lib/gcc/armv7l-tizen-linux-gnueabi/${GCCVER}/ld.gold"

